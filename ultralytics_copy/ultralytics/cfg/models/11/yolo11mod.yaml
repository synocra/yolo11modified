# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license



# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect
# Ensure this module exists:
# from ultralytics.nn.attention.coord_att import CoordAtt

# Parameters
nc: 80  # number of classes
scales:
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]


# YOLO11n MODIFIED BACKBONE + CA
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]       # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]      # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]  # 2
  - [-1, 1, CoordAtt, [256, 256]]   # 3. âœ… CA at P2/4
  - [-1, 1, Conv, [256, 3, 2]]      # 4-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]  # 5
  - [-1, 1, CoordAtt, [512, 512]]   # 6. âœ… CA at P3/8
  - [-1, 1, Conv, [512, 3, 2]]      # 7-P4/16
  - [-1, 2, C3k2, [512, True]]      # 8
  - [-1, 1, Conv, [1024, 3, 2]]     # 9-P5/32
  - [-1, 2, C3k2, [1024, True]]     # 10
  - [-1, 1, SPPF, [1024, 5]]        # 11
  - [-1, 2, C2PSA, [1024]]          # 12
  # Backbone output layers: P2 (3), P3 (6), P4 (8), P5 (12)

# YOLO11n MODIFIED HEAD + CA
head:
  # ðŸŸ© FPN path (Top-down): P5 â†’ P4 â†’ P3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 13. Upsample P5
  - [[-1, 8], 1, Concat, [1]]                   # 14. cat backbone P4
  - [-1, 2, C3k2, [512, False]]                 # 15
  - [-1, 1, CoordAtt, [512, 512]]               # 16. âœ… CA in Neck (after P4 fusion)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 17. Upsample P4
  - [[-1, 6], 1, Concat, [1]]                   # 18. cat backbone P3
  - [-1, 2, C3k2, [256, False]]                 # 19
  - [-1, 1, CoordAtt, [256, 256]]               # 20. âœ… CA in Neck (after P3 fusion)

  # ðŸŸ© High-resolution P2 head
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 21. Upsample P3 â†’ P2
  - [[-1, 1], 1, Concat, [1]]                   # 22. cat backbone P2 (Layer 1)
  - [-1, 2, C3k2, [128, False]]                 # 23. P2/4-tiny head
  - [-1, 1, CoordAtt, [128, 128]]               # 24. âœ… CA on P2 head output

  # ðŸŸ© PAN path (Bottom-up): P2 â†’ P3 â†’ P4 â†’ P5
  - [-1, 1, Conv, [256, 3, 2]]                  # 25. Downsample P2â†’P3
  - [[-1, 19], 1, Concat, [1]]                  # 26. cat P2_down and P3_head
  - [-1, 2, C3k2, [256, False]]                 # 27. P3/8-small refined
  - [-1, 1, CoordAtt, [256, 256]]               # 28. âœ… CA on refined P3

  - [-1, 1, Conv, [512, 3, 2]]                  # 29. Downsample P3â†’P4
  - [[-1, 15], 1, Concat, [1]]                  # 30. cat P3_down and P4_head
  - [-1, 2, C3k2, [512, False]]                 # 31. P4/16-medium refined
  - [-1, 1, CoordAtt, [512, 512]]               # 32. âœ… CA on refined P4

  - [-1, 1, Conv, [1024, 3, 2]]                 # 33. Downsample P4â†’P5
  - [[-1, 12], 1, Concat, [1]]                  # 34. cat P4_down and P5_backbone
  - [-1, 2, C3k2, [1024, True]]                 # 35. P5/32-large refined
  - [-1, 1, CoordAtt, [512, 512]]             # 36. âœ… CA on refined P5

  # ðŸŸ© Detection Head â€” 4 output scales
  - [[24, 27, 31, 35], 1, Detect, [nc]]         # 37. Detect(P2, P3, P4, P5)
